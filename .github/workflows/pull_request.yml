name: PullRequest
on: pull_request
jobs:
  ci:
    uses: ./.github/workflows/ci.yml

  publish-canary:
    runs-on: ubuntu-latest
    name: Publish Canary
    environment: PublishCanaryPRsOnNPM
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          cache: npm
          node-version-file: '.node-version'
          # 'registry-url' is required for 'npm publish'
          registry-url: 'https://registry.npmjs.org'

      - name: Download event.json
        run: gh run download "$WORKFLOW_ID" -n event.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WORKFLOW_ID: ${{github.event.workflow_run.id}}

      - name: Download NPM package artifact
        run: gh run download "$WORKFLOW_ID" -n npmDist -D npmDist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WORKFLOW_ID: ${{github.event.workflow_run.id}}

      - name: Modify NPM package to be canary release
        uses: actions/github-script@v5
        with:
          script: |
            const fs = require('fs');
            const assert = require('assert');

            const packageJSONPath = './npmDist/package.json';
            const packageJSON = JSON.parse(fs.readFileSync(packageJSONPath, 'utf-8'));
            const { pull_request } = JSON.parse(fs.readFileSync('./event.json', 'utf-8'));

            // Override entire 'publishConfig' since it can contain untrusted data.
            packageJSON.publishConfig = { tag: `canary-pr-${pull_request.number}` };

            assert(!packageJSON.version.includes('+'), 'Can not append after metadata');
            packageJSON.version += packageJSON.version.includes('-') ? '.' : '-';
            packageJSON.version += `canary.pr.${pull_request.number}.${pull_request.head.sha}`;

            packageJSON.deprecated =
              `You are using canary version build from ${pull_request.url}, no gurantees provided so please use your own discretion.`;

            assert(
              packageJSON.scripts == null,
              'No scripts allowed for security reasons!',
            );

            fs.writeFileSync(
              packageJSONPath,
              JSON.stringify(packageJSON, null, 2),
              'utf-8',
            );

            core.exportVariable('PR_NUMBER', pull_request.number);
            core.exportVariable('NPM_TAG', packageJSON.publishConfig.tag);
            core.exportVariable('NPM_VERSION', packageJSON.version);

      - name: Publish NPM package
        run: npm publish --ignore-scripts ./npmDist
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Add comment on PR
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: process.env.PR_NUMBER,
              body: process.env.COMMENT_BODY,
            })
        env:
          COMMENT_BODY: |
            The latest changes of this PR are available on NPM as
            [graphql@${{env.NPM_VERSION}}](https://www.npmjs.com/package/graphql/v/${{env.NPM_VERSION}})
            **Note: no gurantees provided so please use your own discretion.**

            Also you can depend on latest version built from this PR:
            `npm install --save graphql@${{env.NPM_TAG}}`

  benchmark:
    name: Run benchmark
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Deepen cloned repo
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
        run: 'git fetch --depth=1 origin $BASE_SHA:refs/tags/BASE'

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          cache: npm
          node-version-file: '.node-version'

      - name: Install Dependencies
        run: npm ci --ignore-scripts

      - name: Run Benchmark
        run: 'npm run benchmark -- --revs HEAD BASE'

  diff-npm-package:
    name: Diff content of NPM package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Deepen cloned repo
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
        run: 'git fetch --depth=1 origin $BASE_SHA:refs/tags/BASE'

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          cache: npm
          node-version-file: '.node-version'

      - name: Install Dependencies
        run: npm ci --ignore-scripts

      - name: Generate report
        run: 'node resources/diff-npm-package.js BASE HEAD'

      - name: Upload generated report
        uses: actions/upload-artifact@v2
        with:
          name: npm-dist-diff.html
          path: ./npm-dist-diff.html
          if-no-files-found: ignore
